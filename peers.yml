# 我的配置
my:
  # 我的 Peer id。留空则从环境变量读取（建议留空并通过环境变量配置）
  id:
  # 我的 Peer key。留空则从环境变量读取（建议留空并通过环境变量配置）
  key:
  # 不建议修改
  nat:
    # 自动检测配置（推荐）
    auto: true
    clientNatType: FULLCONE
    isUpnpSupported: true
    clientInetAddress:
    clientInet6Address:
# 对等端配置
peers:
  # peer id (64位整数)
  200000:
    key: passwordpasswordpasswordpassword
    # NATPoked 用于打洞 P2P 通信的端口（可选，必须唯一，若不填则随机绑定）
    pokedPort: 57000
    # 自动连接到此 peer 并保持连接
    autoConnect: true

    # 端口服务转发配置（可选）
    ports:
      # "https" 为服务名称（名称任取），具有相同服务名称的服务将被连接在一起
      # 不要使用双下划线 __ 开头的服务名称，这些名称由系统保留使用。
      https:
        # 协议：TCP | UDP
        protocol: TCP
        # 源主机（由NATPoked侦听）
        srcHost: 127.0.0.1
        # 源端口（由NATPoked侦听）
        srcPort: 50001
        # 目标主机
        dstHost: 127.0.0.1
        # 目标端口
        dstPort: 443
        # 角色：作为客户端还是服务端 CLIENT | SERVER
        role: SERVER
    # WireGuard 配置（可选）
    # 本功能可以让 NATPoked 自动进行简单的 WireGuard 配置，如果需要更高级的 WireGuard 功能，则请使用上面的端口转发功能
    wireGuard:
      enabled: true
      # 我的私钥
      privateKey:
      # 我的地址（CIDR表示法）
      address: 172.25.0.2/24
      # 允许的 IP （CIDR表示法）
      allowedIPs: 172.25.0.0/24
      # 监听的端口
      listenPort: 51000
      # DNS
      dns:
      # MTU
      mtu: 1400